View(data_x)
help(rename)
library(dplyr)
data_l <- select(dataset_longitudinal, 6, 8:15)
data_x <- select(dataset_xsectional, 2, 4:11)
colnames(data_x)[colnames(data_x) == 'Educ'] <- 'EDUC'
data_total<-bind_rows(data_l,data_x)
View(data_x)
View(data_total)
anova3 <- aov(CDR~EDUC, data=data_total)
summary(anova3)
shapiro.test(anova3$residuals)
anova3 <- aov(CDR~EDUC, data=data_total)
summary(anova3)
shapiro.test(anova3$residuals)
kw3 <- kruskal.test(CDR~EDUC, data=data_total)
kw3
anova4 <- aov(CDR~SES, data=data_total)
summary(anova4)
shapiro.test(anova4$residuals)
kw4 <- kruskal.test(CDR~SES, data=data_total)
kw4
anova5 <- aov(CDR~MMSE, data=data_total)
summary(anova5)
shapiro.test(anova5$residuals)
kw5 <- kruskal.test(CDR~MMSE, data=data_total)
kw5
anova6 <- aov(CDR~eTIV, data=data_total)
summary(anova6)
shapiro.test(anova6$residuals)
kw6 <- kruskal.test(CDR~eTIV, data=data_total)
kw6
anova7 <- aov(CDR~nWBV, data=data_total)
summary(anova7)
shapiro.test(anova7$residuals)
kw7 <- kruskal.test(CDR~nWBV, data=data_total)
kw7
anova8 <- aov(CDR~ASF, data=data_total)
summary(anova8)
shapiro.test(anova8$residuals)
kw8 <- kruskal.test(CDR~ASF, data=data_total)
kw8
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
setwd('C:/Users/Elena/Desktop/Elena/Polimi/MAGISTRALE/Nonparametric statistics/Progetto/github repository/ALZHEIMER_prognonpa/Elena')
dataset_xsectional <- read.csv("oasis_cross-sectional.csv", header = T)
dataset_longitudinal <- read.csv("oasis_longitudinal.csv", header = T)
data1 <- data.frame(as.factor(dataset_longitudinal$M.F), as.factor(dataset_longitudinal$Age), dataset_longitudinal$CDR)
colnames(data1) <- c('M.F','Age','CDR')
anova1 <- aov(CDR~M.F+Age+M.F:Age, data=data1)
summary(anova1)
plot(anova1)
shapiro.test(anova1$residuals)
shapiro.test(aov(CDR~M.F, data=data1)$residuals)
shapiro.test(aov(CDR~Age, data=data1)$residuals)
bartlett.test(CDR~M.F, data=data1)
#datadumm <- data1
#datadumm$dummy <- ifelse(datadumm$CDR>0,1,0)
bartlett.test(CDR~Age, data=data1)
kw1 <- kruskal.test(CDR~M.F, data=data1)
kw1
kw2 <- kruskal.test(CDR~Age, data=data1)
kw2
data11 <- dataset_longitudinal[which(dataset_longitudinal$Visit == 1),]
data11 <- data.frame(as.factor(data11$M.F), as.factor(data11$Age), data11$CDR)
colnames(data11) <- c('M.F','Age','CDR')
anova11 <- aov(CDR~M.F+Age+M.F:Age, data=data11)
summary(anova11)
plot(anova11)
shapiro.test(anova11$residuals)
shapiro.test(aov(CDR~M.F, data=data11)$residuals)
shapiro.test(aov(CDR~Age, data=data11)$residuals)
bartlett.test(CDR~M.F, data=data11)
bartlett.test(CDR~Age, data=data11)
kw11 <- kruskal.test(CDR~M.F, data=data11)
kw11
kw12 <- kruskal.test(CDR~Age, data=data11)
kw12
data2 <- data.frame(as.factor(dataset_xsectional$M.F), as.factor(dataset_xsectional$Age), dataset_xsectional$CDR)
colnames(data2) <- c('M.F','Age','CDR')
datat <- rbind(data1, data2)
#datat <- na.omit(datat)
anova2 <- aov(CDR~M.F+Age+M.F:Age, data=datat)
summary(anova2)
plot(anova2)
shapiro.test(anova2$residuals)
shapiro.test(aov(CDR~M.F, data=datat)$residuals)
shapiro.test(aov(CDR~Age, data=datat)$residuals)
bartlett.test(CDR~M.F, data=datat)
bartlett.test(CDR~Age, data=datat)
kw21 <- kruskal.test(CDR~M.F, data=datat)
kw21
kw22 <- kruskal.test(CDR~Age, data=datat)
kw22
library(dplyr)
data_l <- select(dataset_longitudinal, 6, 8:15)
data_x <- select(dataset_xsectional, 2, 4:11)
colnames(data_x)[colnames(data_x) == 'Educ'] <- 'EDUC'
data_total<-bind_rows(data_l,data_x)
anova3 <- aov(CDR~EDUC, data=data_total)
summary(anova3)
shapiro.test(anova3$residuals)
kw3 <- kruskal.test(CDR~EDUC, data=data_total)
kw3
anova4 <- aov(CDR~SES, data=data_total)
summary(anova4)
shapiro.test(anova4$residuals)
kw4 <- kruskal.test(CDR~SES, data=data_total)
kw4
anova5 <- aov(CDR~MMSE, data=data_total)
summary(anova5)
shapiro.test(anova5$residuals)
kw5 <- kruskal.test(CDR~MMSE, data=data_total)
kw5
anova6 <- aov(CDR~eTIV, data=data_total)
summary(anova6)
shapiro.test(anova6$residuals)
kw6 <- kruskal.test(CDR~eTIV, data=data_total)
kw6
anova7 <- aov(CDR~nWBV, data=data_total)
summary(anova7)
shapiro.test(anova7$residuals)
kw7 <- kruskal.test(CDR~nWBV, data=data_total)
kw7
anova8 <- aov(CDR~ASF, data=data_total)
summary(anova8)
shapiro.test(anova8$residuals)
kw8 <- kruskal.test(CDR~ASF, data=data_total)
kw8
library(dplyr)
data_l <- select(dataset_longitudinal, 6, 8:15)
data_l <- data_l[which(dataset_longitudinal$Visit==1),]
data_x <- select(dataset_xsectional, 2, 4:11)
colnames(data_x)[colnames(data_x) == 'Educ'] <- 'EDUC'
data_total<-bind_rows(data_l,data_x)
anova3 <- aov(CDR~EDUC, data=data_total)
summary(anova3)
shapiro.test(anova3$residuals)
kw3 <- kruskal.test(CDR~EDUC, data=data_total)
kw3
anova4 <- aov(CDR~SES, data=data_total)
summary(anova4)
shapiro.test(anova4$residuals)
kw4 <- kruskal.test(CDR~SES, data=data_total)
kw4
anova5 <- aov(CDR~MMSE, data=data_total)
summary(anova5)
shapiro.test(anova5$residuals)
kw5 <- kruskal.test(CDR~MMSE, data=data_total)
kw5
anova6 <- aov(CDR~eTIV, data=data_total)
summary(anova6)
shapiro.test(anova6$residuals)
kw6 <- kruskal.test(CDR~eTIV, data=data_total)
kw6
anova7 <- aov(CDR~nWBV, data=data_total)
summary(anova7)
shapiro.test(anova7$residuals)
kw7 <- kruskal.test(CDR~nWBV, data=data_total)
kw7
anova8 <- aov(CDR~ASF, data=data_total)
summary(anova8)
shapiro.test(anova8$residuals)
kw8 <- kruskal.test(CDR~ASF, data=data_total)
kw8
data2 <- data.frame(as.factor(dataset_xsectional$M.F), as.factor(dataset_xsectional$Age), dataset_xsectional$CDR)
colnames(data2) <- c('M.F','Age','CDR')
datat <- rbind(data11, data2)
#datat <- na.omit(datat)
anova2 <- aov(CDR~M.F+Age+M.F:Age, data=datat)
summary(anova2)
plot(anova2)
shapiro.test(anova2$residuals)
shapiro.test(aov(CDR~M.F, data=datat)$residuals)
shapiro.test(aov(CDR~Age, data=datat)$residuals)
bartlett.test(CDR~M.F, data=datat)
bartlett.test(CDR~Age, data=datat)
kw21 <- kruskal.test(CDR~M.F, data=datat)
kw21
kw22 <- kruskal.test(CDR~Age, data=datat)
kw22
data11 <- dataset_longitudinal[which(dataset_longitudinal$Visit == 1),]
data11 <- data.frame(as.factor(data11$M.F), as.factor(data11$Age), data11$CDR)
colnames(data11) <- c('M.F','Age','CDR')
anova11 <- aov(CDR~M.F+Age+M.F:Age, data=data11)
summary(anova11)
shapiro.test(anova11$residuals)
shapiro.test(aov(CDR~M.F, data=data11)$residuals)
shapiro.test(aov(CDR~Age, data=data11)$residuals)
bartlett.test(CDR~M.F, data=data11)
kw11 <- kruskal.test(CDR~M.F, data=data11)
kw11
kw12 <- kruskal.test(CDR~Age, data=data11)
kw12
plot(aov(CDR~Age, data=data11))
plot(aov(CDR~M.F, data=data11))
plot(aov(CDR~Age, data=data11))
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
setwd('C:/Users/Elena/Desktop/Elena/Polimi/MAGISTRALE/Nonparametric statistics/Progetto/github repository/ALZHEIMER_prognonpa/Elena')
dataset_xsectional <- read.csv("oasis_cross-sectional.csv", header = T)
dataset_longitudinal <- read.csv("oasis_longitudinal.csv", header = T)
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
setwd('C:/Users/Elena/Desktop/Elena/Polimi/MAGISTRALE/Nonparametric statistics/Progetto/github repository/ALZHEIMER_prognonpa/Elena')
dataset_xsectional <- read.csv("oasis_cross-sectional.csv", header = T)
dataset_longitudinal <- read.csv("oasis_longitudinal.csv", header = T)
pairs(dataset_longitudinal)
hist(dataset_longitudinal)
View(dataset_longitudinal)
hist(dataset_longitudinal[,8:15])
pairs(dataset_longitudinal[,8:15])
View(dataset_longitudinal)
pairs(dataset_longitudinal[,6:15])
pairs(dataset_longitudinal[,8:15])
hist(dataset_longitudinal$Age)
boxplot(dataset_longitudinal)
boxplot(dataset_longitudinal[,8:15])
boxplot(dataset_longitudinal[,8:12])
boxplot(dataset_longitudinal[,8:15])
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
data11 <- dataset_longitudinal[which(dataset_longitudinal$Visit == 1),]
data11 <- data.frame(as.factor(data11$M.F), as.factor(data11$Age), data11$CDR)
colnames(data11) <- c('M.F','Age','CDR')
anova11 <- aov(CDR~M.F+Age+M.F:Age, data=data11)
summary(anova11)
anova11 <- aov(CDR~M.F+Age+M.F:Age, data=data11)
summary(anova11)
plot(anova11)
shapiro.test(anova11$residuals)
anova12 <- aov(CDR~M.F, data=data11)
shapiro.test(anova12$residuals)
plot(anova12)
anova12 <- aov(CDR~M.F, data=data11)
summary(anova12)
shapiro.test(anova12$residuals)
plot(anova12)
anova13 <-aov(CDR~Age, data=data11)
summary(anova13)
shapiro.test(anova13$residuals)
plot(anova13)
bartlett.test(CDR~M.F, data=data11)
bartlett.test(CDR~Age, data=data11)
kw11 <- kruskal.test(CDR~M.F, data=data11)
kw11
kw12 <- kruskal.test(CDR~Age, data=data11)
kw12
data2 <- data.frame(as.factor(dataset_xsectional$M.F), as.factor(dataset_xsectional$Age), dataset_xsectional$CDR)
colnames(data2) <- c('M.F','Age','CDR')
datat <- rbind(data11, data2)
#datat <- na.omit(datat)
anova2 <- aov(CDR~M.F+Age+M.F:Age, data=datat)
summary(anova2)
plot(anova2)
shapiro.test(anova2$residuals)
shapiro.test(aov(CDR~M.F, data=datat)$residuals)
shapiro.test(aov(CDR~Age, data=datat)$residuals)
bartlett.test(CDR~M.F, data=datat)
bartlett.test(CDR~Age, data=datat)
kw21 <- kruskal.test(CDR~M.F, data=datat)
kw21
kw22 <- kruskal.test(CDR~Age, data=datat)
kw22
View(dataset_xsectional)
anova22 <- aov(CDR~M.F+Age+M.F:Age, data=data2)
summary(anova22)
plot(anova22)
shapiro.test(anova22$residuals)
shapiro.test(aov(CDR~M.F, data=data2)$residuals)
shapiro.test(aov(CDR~Age, data=data2)$residuals)
bartlett.test(CDR~M.F, data=data2)
bartlett.test(CDR~Age, data=data2)
kw212 <- kruskal.test(CDR~M.F, data=data2)
kw212
kw222 <- kruskal.test(CDR~Age, data=data2)
kw222
library(rgl)
knitr::opts_chunk$set(echo = TRUE)
knitr::knit_hooks$set(webgl = hook_webgl)
setwd('C:/Users/Elena/Desktop/Elena/Polimi/MAGISTRALE/Nonparametric statistics/Progetto/github repository/ALZHEIMER_prognonpa/Elena')
dataset_xsectional <- read.csv("oasis_cross-sectional.csv", header = T)
dataset_longitudinal <- read.csv("oasis_longitudinal.csv", header = T)
library(DepthProc)
library(aplpack)
bagplot_matrix <- aplpack::bagplot.pairs(dataset_longitudinal, main = 'Pairs of bagplots')  # bagplot dimension by dimension
# demented <- dataset_longitudinal[which(dataset_longitudinal$Group == 'Demented'),]
# nondemented <- dataset_longitudinal[which(dataset_longitudinal$Group == 'Nondemented'),]
#
# ddPlot(x = demented ,y=nondemented,depth_params = list(method='Tukey'))
depthContour(
data.frame(dataset_longitudinal$Age, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
depthContour(
data.frame(dataset_longitudinal$Age, dataset_longitudinal$MMSE),
depth_params = list(method = 'spatial'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags1 <- bagplot(data.frame(dataset_longitudinal$Age, dataset_longitudinal$MMSE),main = "Bagplot", xlab = "Age", ylab = "MMSE")
bags1 <- bagplot(data.frame(dataset_longitudinal$Age, dataset_longitudinal$MMSE), xlab = "Age", ylab = "MMSE")
depthContour(
data.frame(dataset_longitudinal$EDUC, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags2 <- bagplot(  data.frame(dataset_longitudinal$EDUC, dataset_longitudinal$MMSE), xlab = "EDUC", ylab = "MMSE")
depthContour(
data.frame(dataset_longitudinal$Age, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags1 <- bagplot(data.frame(dataset_longitudinal$Age, dataset_longitudinal$MMSE), xlab = "Age", ylab = "MMSE")
outlying_obs1 <- bags1$pxy.outlier
outlying_obs1
which(dataset_longitudinal$Age==outlying_obs1[,1] & dataset_longitudinal$MMSE==outlying_obs1[,2])
depthContour(
data.frame(dataset_longitudinal$EDUC, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags2 <- bagplot(  data.frame(dataset_longitudinal$EDUC, dataset_longitudinal$MMSE), xlab = "EDUC", ylab = "MMSE")
depthContour(
data.frame(dataset_longitudinal$EDUC, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags2 <- bagplot(  data.frame(dataset_longitudinal$EDUC, dataset_longitudinal$MMSE), xlab = "EDUC", ylab = "MMSE")
outlying_obs2 <- bags2$pxy.outlier
outlying_obs2
which(dataset_longitudinal$EDUC==outlying_obs2[,1] & dataset_longitudinal$MMSE==outlying_obs2[,2])
depthContour(
data.frame(dataset_longitudinal$eTIV, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags3 <- bagplot(data.frame(dataset_longitudinal$eTIV, dataset_longitudinal$MMSE), xlab = "eTIV", ylab = "MMSE")
outlying_obs3 <- bags3$pxy.outlier
outlying_obs3
which(dataset_longitudinal$eTIV==outlying_obs3[,1] & dataset_longitudinal$MMSE==outlying_obs3[,2])
depthContour(
data.frame(dataset_longitudinal$nWBV, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags4 <- bagplot(data.frame(dataset_longitudinal$nWBV, dataset_longitudinal$MMSE), xlab = "nWBV", ylab = "MMSE")
outlying_obs4 <- bags4$pxy.outlier
outlying_obs4
which(dataset_longitudinal$nWBV==outlying_obs4[,1] & dataset_longitudinal$MMSE==outlying_obs4[,2])
depthContour(
data.frame(dataset_longitudinal$ASF, dataset_longitudinal$MMSE),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags5 <- bagplot(data.frame(dataset_longitudinal$ASF, dataset_longitudinal$MMSE), xlab = "ASF", ylab = "MMSE")
outlying_obs5 <- bags5$pxy.outlier
outlying_obs5
which(dataset_longitudinal$ASF==outlying_obs5[,1] & dataset_longitudinal$MMSE==outlying_obs5[,2])
depthContour(
data.frame(dataset_longitudinal$Age,dataset_longitudinal$EDUC ),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags6 <- bagplot(data.frame(dataset_longitudinal$Age,dataset_longitudinal$EDUC ), xlab = "Age", ylab = "EDUC")
outlying_obs6 <- bags6$pxy.outlier
outlying_obs6
which(dataset_longitudinal$Age==outlying_obs6[,1] & dataset_longitudinal$EDUC==outlying_obs6[,2])
depthContour(
data.frame(dataset_longitudinal$eTIV, dataset_longitudinal$EDUC),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags7 <- bagplot(data.frame(dataset_longitudinal$eTIV, dataset_longitudinal$EDUC), xlab = "eTIV", ylab = "EDUC")
outlying_obs7 <- bags7$pxy.outlier
outlying_obs7
which(dataset_longitudinal$eTIV==outlying_obs7[,1] & dataset_longitudinal$EDUC==outlying_obs7[,2])
depthContour(
data.frame(dataset_longitudinal$nWBV, dataset_longitudinal$EDUC),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags8 <- bagplot(data.frame(dataset_longitudinal$nWBV, dataset_longitudinal$EDUC), xlab = "nWBV", ylab = "EDUC")
outlying_obs8 <- bags8$pxy.outlier
outlying_obs8
which(dataset_longitudinal$nWBV==outlying_obs8[,1] & dataset_longitudinal$EDUC==outlying_obs8[,2])
depthContour(
data.frame(dataset_longitudinal$ASF, dataset_longitudinal$EDUC),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags9 <- bagplot(data.frame(dataset_longitudinal$ASF, dataset_longitudinal$EDUC), xlab = "ASF", ylab = "EDUC")
outlying_obs9 <- bags9$pxy.outlier
outlying_obs9
which(dataset_longitudinal$ASF==outlying_obs9[,1] & dataset_longitudinal$EDUC==outlying_obs9[,2])
depthContour(
data.frame(dataset_longitudinal$Age, dataset_longitudinal$eTIV),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags10 <- bagplot(data.frame(dataset_longitudinal$Age, dataset_longitudinal$eTIV), xlab = "Age", ylab = "eTIV")
outlying_obs10 <- bags10$pxy.outlier
outlying_obs10
which(dataset_longitudinal$Age==outlying_obs10[,1] & dataset_longitudinal$eTIV==outlying_obs10[,2])
dataset_train <- read.csv("train.csv", header = T)
dataset_train <- dataset_train[,-1]
dataset_train$L <- ifelse(dataset_train$label == 'Dem', 1, 0)  # dummy variable for demented/nondemented
head(dataset_train)
bagplot_matrix_train <- aplpack::bagplot.pairs(dataset_train)
depthContour(
data.frame(dataset_train$Age, dataset_train$eTIV),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags1_train <- bagplot(data.frame(dataset_train$Age, dataset_train$eTIV), xlab = "Age", ylab = "eTIV")
outlying_obs1_train <- bags1_train$pxy.outlier
outlying_obs1_train
which(dataset_train$Age==outlying_obs1_train[1,1] & dataset_train$eTIV==outlying_obs1_train[1,2])
which(dataset_train$Age==outlying_obs1_train[2,1] & dataset_train$eTIV==outlying_obs1_train[2,2])
depthContour(
data.frame(dataset_train$Age, dataset_train$nWBV),
depth_params = list(method = 'Tukey'),
points = TRUE,
colors = colorRampPalette(c('white', 'navy')),
levels = 10,
pdmedian = F,
graph_params = list(cex=.01, pch=1),
pmean = F
)
bags2_train <- bagplot(data.frame(dataset_train$Age, dataset_train$nWBV), xlab = "Age", ylab = "nWBV")
outlying_obs2_train <- bags2_train$pxy.outlier
outlying_obs2_train
which(dataset_train$Age==outlying_obs2_train[,1] & dataset_train$nWBV==outlying_obs2_train[,2])
